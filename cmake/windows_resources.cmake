# Module for handling Windows .rc resources in a reusable way

function(mole_add_resource)
    set(options "")
    set(oneValueArgs TARGET TYPE ID FILE OPTIONS)
    set(multiValueArgs "")
    cmake_parse_arguments(ARG "${options}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN})

    if (NOT ARG_TARGET)
        message(FATAL_ERROR "mole_add_resource requires TARGET (name of the CMake target)")
    endif ()
    if (NOT ARG_TYPE)
        message(FATAL_ERROR "mole_add_resource requires TYPE (e.g., RCDATA, ICON)")
    endif ()
    if (NOT ARG_ID)
        message(FATAL_ERROR "mole_add_resource requires ID (e.g., IDR_FONT1 or 101)")
    endif ()
    if (NOT ARG_FILE AND NOT ARG_TYPE STREQUAL "VERSIONINFO" AND NOT ARG_TYPE STREQUAL "RAW")
        message(FATAL_ERROR "mole_add_resource requires FILE (path to the resource file) for this TYPE")
    endif ()

    if (NOT TARGET ${ARG_TARGET})
        message(FATAL_ERROR "Target ${ARG_TARGET} does not exist")
    endif ()

    set(DELIMITER "|")
    set(RES_ENTRY "${ARG_TYPE}${DELIMITER}${ARG_ID}${DELIMITER}${ARG_FILE}${DELIMITER}${ARG_OPTIONS}")

    set_property(TARGET ${ARG_TARGET} APPEND PROPERTY MOLE_RESOURCES "${RES_ENTRY}")
endfunction()

function(mole_generate_resources_rc)
    set(options ADD_TO_TARGET)
    set(oneValueArgs TARGET OUTPUT_VAR)
    set(multiValueArgs "")
    cmake_parse_arguments(ARG "${options}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN})

    if (NOT ARG_TARGET)
        message(FATAL_ERROR "mole_generate_resources_rc requires TARGET (name of the CMake target)")
    endif ()
    if (NOT TARGET ${ARG_TARGET})
        message(FATAL_ERROR "Target ${ARG_TARGET} does not exist")
    endif ()

    get_property(RESOURCES TARGET ${ARG_TARGET} PROPERTY MOLE_RESOURCES)
    if (NOT RESOURCES)
        message(WARNING "No resources defined for target ${ARG_TARGET}. Skipping .rc generation.")
        return()
    endif ()

    set(RC_FILE "${CMAKE_CURRENT_BINARY_DIR}/generated/resources/${ARG_TARGET}_resources.rc")
    file(MAKE_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/generated/resources")

    set(RC_CONTENT "#include <winresrc.h>\n\n")

    set(DELIMITER "|")
    foreach (RESOURCE IN LISTS RESOURCES)
        string(REPLACE "${DELIMITER}" ";" RES_PARTS "${RESOURCE}")
        list(LENGTH RES_PARTS PARTS_COUNT)
        if (PARTS_COUNT LESS 4)
            message(WARNING "Invalid resource entry: ${RESOURCE}. Skipping.")
            continue()
        endif ()

        list(GET RES_PARTS 0 TYPE)
        list(GET RES_PARTS 1 ID)
        list(GET RES_PARTS 2 FILE)
        list(GET RES_PARTS 3 OPTIONS)

        if (FILE AND EXISTS "${FILE}")
            file(TO_NATIVE_PATH "${FILE}" NATIVE_FILE)
            string(REPLACE "\\" "\\\\" NATIVE_FILE "${NATIVE_FILE}")
        else ()
            set(NATIVE_FILE "")
        endif ()

        if (TYPE STREQUAL "RCDATA" OR TYPE STREQUAL "ICON" OR TYPE STREQUAL "BITMAP")
            if (NATIVE_FILE)
                string(APPEND RC_CONTENT "${ID} ${TYPE} \"${NATIVE_FILE}\"\n")
            else ()
                message(WARNING "Resource ${ID} of type ${TYPE} has no valid file. Skipping.")
            endif ()
        elseif (TYPE STREQUAL "VERSIONINFO")
            string(APPEND RC_CONTENT "VS_VERSION_INFO VERSIONINFO\n${OPTIONS}\n")
        elseif (TYPE STREQUAL "RAW")
            string(APPEND RC_CONTENT "${OPTIONS}\n")
        else ()
            message(WARNING "Unsupported resource TYPE: ${TYPE} for target ${ARG_TARGET}. Skipping.")
        endif ()
    endforeach ()

    file(WRITE "${RC_FILE}" "${RC_CONTENT}")
    message(STATUS "Generated Windows resources.rc for target ${ARG_TARGET} at ${RC_FILE}")

    if (ARG_ADD_TO_TARGET)
        target_sources(${ARG_TARGET} PRIVATE "${RC_FILE}")
    endif ()

    if (ARG_OUTPUT_VAR)
        set(${ARG_OUTPUT_VAR} "${RC_FILE}" PARENT_SCOPE)
    endif ()
endfunction()